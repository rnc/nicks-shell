---

- name: run the playbook tasks on the localhost
  hosts: windows
  vars:
    - do_vault: true
    - script_location: C:\PowerShellScripts

  tasks:
  # Useful for debugging priviledge https://docs.ansible.com/ansible/latest/user_guide/become.html#become-and-windows
  # - win_whoami:
  #     become: yes
  - include_vars: packages.yml
  - include_vars: services.yml
  - include_vars: "{{ private_vars }}"
    when: do_vault == true
#    no_log: True

  - debug:
      msg: "Running Ansible for Windows"

  # Install other local users. Don't handle Microsoft account users.
  - name: Create local users
    win_user:
      name: '{{ item.name }}'
      fullname: '{{ item.fullname }}'
      password: '{{ item.password }}'
      groups: '{{ item.groups }}'
      groups_action: 'add'
      state: present
    loop: "{{ user_accounts }}"

  # Synology mapped drives
  # misc, music, photo, video, backup [todo]
  - name: Map Synology Network Misc
    win_mapped_drive:
      letter: I
      path: '\\192.168.0.168\misc'
      state: present
      username: cross
      password: "{{ synology_family_pass }}"
  - name: Map Synology Network Music
    win_mapped_drive:
      letter: M
      path: '\\192.168.0.168\music'
      state: present
      username: cross
      password: "{{ synology_family_pass }}"
  - name: Map Synology Network Photo
    win_mapped_drive:
      letter: P
      path: '\\192.168.0.168\photo'
      state: present
      username: cross
      password: "{{ synology_family_pass }}"
  - name: Map Synology Network Video
    win_mapped_drive:
      letter: V
      path: '\\192.168.0.168\video'
      state: present
      username: cross
      password: "{{ synology_family_pass }}"
  # - name: Map Synology Network Backups
  #   win_mapped_drive:
  #     letter: X
  #     path: \\192.168.0.168\\backup
  #     state: present
  #     username: cross
  #     password: "{{ synology_family_pass }}"


  - name: Disable and stop services
    win_service:
      # If state is absent it will remove the service but that can be dangerous.
      state: stopped
      start_mode: disabled
      name: "{{ item }}"
      force_dependent_services: "yes"
    ignore_errors: true
    loop: "{{ services_to_disable_and_stop }}"

  - name: Disable services
    win_service:
      start_mode: disabled
      name: "{{ item }}"
      force_dependent_services: "yes"
    ignore_errors: true
    loop: "{{ services_to_disable }}"

  - name: Install packages
    win_chocolatey:
      name: "{{ standard_packages_to_install }}"
      state: latest

  # Use this as choco package is out of date
  - name: Install Sumatra
    win_package:
      path: https://www.sumatrapdfreader.org/dl2/SumatraPDF-3.2-64-install.exe
      product_id: SumatraPDF
      arguments:
      - /s
      - /install
      - /with-filter
      - /with-preview
      - /d 'C:\Program Files (x86)\SumatraPDF'
      creates_path: 'C:\Program Files (x86)\SumatraPDF'
      state: present
  # Cache/SHA problems (plus out of date) compared to chocolaty
  - name: Install MediaMonkey
    win_package:
      path: https://www.mediamonkey.com/MediaMonkey_Setup.exe
      product_id: MediaMonkey
      arguments:
      - /SILENT
      creates_path: 'C:\Program Files (x86)\MediaMonkey'
      state: present

  - name: Run powershell configurations
    include_role:
      name: powershell

  - name: Install self updating packages
    win_chocolatey:
      name: "{{ self_updating_packages_to_install }}"
      state: latest
      pinned: true

  - name: Install all security, critical, and rollup updates without a scheduled task
    win_updates:
      category_names:
        - SecurityUpdates
        - CriticalUpdates
        - UpdateRollups
      reboot: yes
