---

- name: run the playbook tasks on the localhost
  hosts: windows
  vars:
    - do_vault: true
    - do_updates: true
    - script_location: C:\PowerShellScripts

  tasks:
  # Useful for debugging priviledge https://docs.ansible.com/ansible/latest/user_guide/become.html#become-and-windows
  - win_whoami:
    register: user_identity
    no_log: True
  - debug:
      msg: "On host {{ inventory_hostname }} with {{ user_identity.account }} and {{ user_identity.label }}"
#  - meta: end_play # DEBUGGING

  - include_vars: packages.yml
    no_log: True
  - include_vars: services.yml
    no_log: True
  - include_vars: "{{ private_vars }}"
    when: do_vault == true
    no_log: True

  - name: Install all security, critical, and rollup updates without a scheduled task
    win_updates:
      category_names:
        - SecurityUpdates
        - CriticalUpdates
        - UpdateRollups
      reboot: yes
    when: do_updates == true

  - name: CreateScriptDir
    win_file:
      path: "{{ script_location }}"
      state: directory

  # Install other local users. Don't handle Microsoft account users.
  - name: Create local users
    win_user:
      name: '{{ item.name }}'
      fullname: '{{ item.fullname }}'
      password: '{{ item.password }}'
      groups: '{{ item.groups }}'
      groups_action: 'add'
      state: present
    loop: "{{ user_accounts }}"

  - name: Disable and stop services
    win_service:
      # If state is absent it will remove the service but that can be dangerous.
      state: stopped
      start_mode: disabled
      name: "{{ item }}"
      force_dependent_services: "yes"
    ignore_errors: true
    loop: "{{ services_to_disable_and_stop }}"

  - name: Disable services
    win_service:
      start_mode: disabled
      name: "{{ item }}"
      force_dependent_services: "yes"
    ignore_errors: true
    loop: "{{ services_to_disable }}"

  - name: Install packages
    win_chocolatey:
      name: "{{ standard_packages_to_install }}"
      state: latest

  - name: Install explicitly managed packages
    include_role:
      name: packages

  - name: Install self updating packages
    win_chocolatey:
      name: "{{ self_updating_packages_to_install }}"
      state: latest
      pinned: true

  - name: Run powershell configurations
    include_role:
      name: powershell

  # Synology mapped drives
  # misc, music, photo, video, backup [todo]
  # Synology mapped drives : misc, music, photo, video, backup [todo]
  # References: https://www.bloggingforlogging.com/2018/11/22/windows-mapped-drives-what-the-hell-is-going-on
  #
  # Strangely win_mapped_drive doesn't seem to work even though the configuration is correct so switched to net use.
  - name: Mapping Drives
    block:
    - name: Save credentials
      win_credential:
        name: 192.168.0.168
        type: domain_password
        username: cross
        secret: '{{ synology_family_pass }}'
        state: present

    - name: run net use to setup mapped drives
      win_shell: |
        if (!(Test-Path M:)) { NET USE M: \\192.168.0.168\music /PERSISTENT:YES }
        if (!(Test-Path P:)) { NET USE P: \\192.168.0.168\photo /PERSISTENT:YES }
        if (!(Test-Path V:)) { NET USE V: \\192.168.0.168\video /PERSISTENT:YES }

    become: yes
    become_method: runas
    vars:
      ansible_become: yes
      ansible_become_method: runas
      ansible_become_user: '{{ ansible_user }}'
      ansible_become_password: '{{ ansible_password }}'

  - name: Prevent Edge Desktop Shortcut
    win_regedit:
      path: HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer
      name: "DisableEdgeDesktopShortcutCreation"
      type: dword
      data: 1

  - name: Diable Web Search
    win_regedit:
      path: HKCU:\SOFTWARE\Policies\Microsoft\Windows\Explorer
      name: "DisableEdgeDesktopShortcutCreation"
      type: dword
      data: 1
    register: output

  - name: Add Digikam Shortcut to desktop. Delete SDCardFormatter and Edge shortcuts. Enable PUAProtection
    win_shell: |
      $TargetFile = "C:\Program Files\digiKam\digikam.exe"
      $ShortcutFile = "$env:Public\Desktop\Digikam.lnk"
      $WScriptShell = New-Object -ComObject WScript.Shell
      $Shortcut = $WScriptShell.CreateShortcut($ShortcutFile)
      $Shortcut.TargetPath = $TargetFile
      $Shortcut.Save()
      Remove-Item 'C:\Users\Public\Desktop\SD Card Formatter.lnk' -ErrorAction Ignore
      Remove-Item 'C:\Users\rnc\Desktop\Microsoft Edge.lnk' -ErrorAction Ignore
      # https://www.tenforums.com/tutorials/32236-enable-disable-windows-defender-pua-protection-windows-10-a.html
      Set-MpPreference -PUAProtection 1

  # http://kolbi.cz/blog/2017/10/25/setuserfta-userchoice-hash-defeated-set-file-type-associations-per-user/
  - name: Fix file associations
    win_copy:
      src: files/setuserfta.txt
      dest: '{{ script_location }}\setuserfta.txt'
  # http://kolbi.cz/blog/2017/11/10/setdefaultbrowser-set-the-default-browser-per-user-on-windows-10-and-server-2016-build-1607/
  - name: Run setuserfta
    win_shell:
      SetUserFTA.exe "{{ script_location }}\setuserfta.txt"
  - name: Run setdefaultbrowser
    win_shell:
      SetDefaultBrowser.exe HKLM Firefox-308046B0AF4A39CB
